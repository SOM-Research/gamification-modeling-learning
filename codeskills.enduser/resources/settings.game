{ 
	levels : [ 
		{ 
		name : beginner ,  
		description : "beginner level" , 
		reward : { 
					points : 50 , 
					badgePath : "img/badges/default.png" , 
					notification : { 
										message : "Congratulations! you've just finished the beginner level" , 
										iconPath : "img/notifications/level.png" , 
										soundPath : "sound/level.wav" 
									}
				  } , 
		groups : [ 
					{ name : simpleStatements , description : "Get familiar with SQL" , reward : { points : 10, badgePath : "img/badges/group.png" } , 
						achievements : [ 
											{ 
												name : simpleselect, description : "Connect to the database DB_2048 and write a SQL query that selects all information from table Commit", 
												reward : { points : 20 , badgePath : "img/badges/achievement.png" } , 
												tasks : [ 
															{ description : "create a simple SQL query" , query : "simpleselect" } 
														]
											} ,
											{ 
												name : simplefilter , description : "Connect to the database DB_2048 and write a SQL query that selects all commits created on Mondays" ,
												reward : { points : 20 , badgePath : "img/badges/achievement.png" } ,
												tasks : [ 
															{ description : "use filter" , query : "simplefilter" } 
														]			
											}
										] 
					  },
					  { name : simpleDiagrams , description : "Get familiar with UML" , reward : { points : 10, badgePath : "img/badges/group.png" } , 
						achievements : [ 
											{ 
												name : createumlfile , description : "Create a UML file called 'MyFirstModel'" ,
												reward : { points : 20 , badgePath : "img/badges/achievement.png" } ,
												tasks : [ 
															{ description : "create a UML model" , query : "createumlfile" } 
														]			
											},
											{ 
												name : simplediagram, description : "In 'MyFirstModel' model a Repository and a Reference, they are defined by a name", 
												reward : { points : 20 , badgePath : "img/badges/achievement.png" } , 
												tasks : [ 
															{ description : "create two UML classes" , query : "simplediagram" } 
														]
											} 
										] 
					  }
				   ] 
		},
		{ 
		name : expert ,  
		description : "expert level" , 
		reward : { 
					points : 100 , 
					badgePath : "img/badges/default.png" , 
					notification : { 
										message : "Congratulations! you've just finished the expert level" , 
										iconPath : "img/notifications/level.png" , 
										soundPath : "sound/level.wav" 
									}
				  } , 
		groups : [ 
					{ name : advancedStatements , description : "Get familiar with advanced SQL commands" , reward : { points : 20, badgePath : "img/badges/group.png" } , 
						achievements : [ 
											{ 
												name : join , description : "Connect to the database DB_2048 and write a SQL query that joins the tables Commit and File Modification" ,
												reward : { points : 30 , badgePath : "img/badges/achievement.png" } ,
												tasks : [ 
															{ description : "use join" , query : "join" } 
														]			
											},
											{ 
												name : groupby , description : "Connect to the database DB_2048, write a SQL query that joins the tables Commit and File Modification and count the number of files modified per developer" ,
												reward : { points : 30 , badgePath : "img/badges/achievement.png" } ,
												tasks : [ 
															{ description : "use group by" , query : "groupby" } 
														]			
											}
										] 
					  },
					  { name : advancedDiagrams , description : "Get familiar with advanced UML" , reward : { points : 20, badgePath : "img/badges/group.png" } , 
						achievements : [ 											
											{ 
												name : association, description : "In 'MyFirstModel' include that a Repository is composed of one or more References", 
												reward : { points : 30 , badgePath : "img/badges/achievement.png" } , 
												tasks : [ 
															{ description : "create an association" , query : "association" } 
														]
											},
											{ 
												name : generalization , description : "In 'MyFirstModel' add that a Reference can be a Branch or a Tag" ,
												reward : { points : 30 , badgePath : "img/badges/achievement.png" } ,
												tasks : [ 
															{ description : "add a generalization" , query : "generalization" } 
														]			
											}
										] 
					  }
				   ] 
		}
	]	
}		   