/*
 * generated by Xtext 2.10.0
 */
package codeskills.designer.game.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class GameGrammarAccess extends AbstractGrammarElementFinder {
	
	public class GameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Game");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLevelsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLevelsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLevelsLevelParserRuleCall_4_0 = (RuleCall)cLevelsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLevelsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLevelsLevelParserRuleCall_5_1_0 = (RuleCall)cLevelsAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Game:
		//	'{'
		//	'levels' ':' '[' levels+=Level (',' levels+=Level)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'levels' ':' '[' levels+=Level (',' levels+=Level)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'levels'
		public Keyword getLevelsKeyword_1() { return cLevelsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//levels+=Level
		public Assignment getLevelsAssignment_4() { return cLevelsAssignment_4; }
		
		//Level
		public RuleCall getLevelsLevelParserRuleCall_4_0() { return cLevelsLevelParserRuleCall_4_0; }
		
		//(',' levels+=Level)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//levels+=Level
		public Assignment getLevelsAssignment_5_1() { return cLevelsAssignment_5_1; }
		
		//Level
		public RuleCall getLevelsLevelParserRuleCall_5_1_0() { return cLevelsLevelParserRuleCall_5_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class RewardableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Rewardable");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cLevelParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cGroupParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAchievementParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Rewardable:
		//	Level | Group | Achievement;
		@Override public ParserRule getRule() { return rule; }
		
		//Level | Group | Achievement
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Level
		public RuleCall getLevelParserRuleCall_0() { return cLevelParserRuleCall_0; }
		
		//Group
		public RuleCall getGroupParserRuleCall_1() { return cGroupParserRuleCall_1; }
		
		//Achievement
		public RuleCall getAchievementParserRuleCall_2() { return cAchievementParserRuleCall_2; }
	}
	public class LevelElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Level");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRewardKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRewardAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRewardRewardParserRuleCall_11_0 = (RuleCall)cRewardAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cGroupsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cColonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cGroupsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cGroupsGroupParserRuleCall_16_0 = (RuleCall)cGroupsAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cCommaKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cGroupsAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cGroupsGroupParserRuleCall_17_1_0 = (RuleCall)cGroupsAssignment_17_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Level:
		//	'{'
		//	'name' ':' name=ID ','
		//	'description' ':' description=STRING ','
		//	'reward' ':' reward=Reward ','
		//	'groups' ':' '[' groups+=Group (',' groups+=Group)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'name' ':' name=ID ',' 'description' ':' description=STRING ',' 'reward' ':' reward=Reward ',' 'groups' ':' '['
		//groups+=Group (',' groups+=Group)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'reward'
		public Keyword getRewardKeyword_9() { return cRewardKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//reward=Reward
		public Assignment getRewardAssignment_11() { return cRewardAssignment_11; }
		
		//Reward
		public RuleCall getRewardRewardParserRuleCall_11_0() { return cRewardRewardParserRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//'groups'
		public Keyword getGroupsKeyword_13() { return cGroupsKeyword_13; }
		
		//':'
		public Keyword getColonKeyword_14() { return cColonKeyword_14; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_15() { return cLeftSquareBracketKeyword_15; }
		
		//groups+=Group
		public Assignment getGroupsAssignment_16() { return cGroupsAssignment_16; }
		
		//Group
		public RuleCall getGroupsGroupParserRuleCall_16_0() { return cGroupsGroupParserRuleCall_16_0; }
		
		//(',' groups+=Group)*
		public Group getGroup_17() { return cGroup_17; }
		
		//','
		public Keyword getCommaKeyword_17_0() { return cCommaKeyword_17_0; }
		
		//groups+=Group
		public Assignment getGroupsAssignment_17_1() { return cGroupsAssignment_17_1; }
		
		//Group
		public RuleCall getGroupsGroupParserRuleCall_17_1_0() { return cGroupsGroupParserRuleCall_17_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_18() { return cRightSquareBracketKeyword_18; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class GroupElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Group");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRewardKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRewardAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRewardRewardParserRuleCall_11_0 = (RuleCall)cRewardAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cAchievementsKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cColonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cAchievementsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cAchievementsAchievementParserRuleCall_16_0 = (RuleCall)cAchievementsAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cCommaKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cAchievementsAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cAchievementsAchievementParserRuleCall_17_1_0 = (RuleCall)cAchievementsAssignment_17_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Group:
		//	'{'
		//	'name' ':' name=ID ','
		//	'description' ':' description=STRING ','
		//	'reward' ':' reward=Reward ','
		//	'achievements' ':' '[' achievements+=Achievement (',' achievements+=Achievement)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'name' ':' name=ID ',' 'description' ':' description=STRING ',' 'reward' ':' reward=Reward ',' 'achievements' ':'
		//'[' achievements+=Achievement (',' achievements+=Achievement)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'reward'
		public Keyword getRewardKeyword_9() { return cRewardKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//reward=Reward
		public Assignment getRewardAssignment_11() { return cRewardAssignment_11; }
		
		//Reward
		public RuleCall getRewardRewardParserRuleCall_11_0() { return cRewardRewardParserRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//'achievements'
		public Keyword getAchievementsKeyword_13() { return cAchievementsKeyword_13; }
		
		//':'
		public Keyword getColonKeyword_14() { return cColonKeyword_14; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_15() { return cLeftSquareBracketKeyword_15; }
		
		//achievements+=Achievement
		public Assignment getAchievementsAssignment_16() { return cAchievementsAssignment_16; }
		
		//Achievement
		public RuleCall getAchievementsAchievementParserRuleCall_16_0() { return cAchievementsAchievementParserRuleCall_16_0; }
		
		//(',' achievements+=Achievement)*
		public Group getGroup_17() { return cGroup_17; }
		
		//','
		public Keyword getCommaKeyword_17_0() { return cCommaKeyword_17_0; }
		
		//achievements+=Achievement
		public Assignment getAchievementsAssignment_17_1() { return cAchievementsAssignment_17_1; }
		
		//Achievement
		public RuleCall getAchievementsAchievementParserRuleCall_17_1_0() { return cAchievementsAchievementParserRuleCall_17_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_18() { return cRightSquareBracketKeyword_18; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class AchievementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Achievement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameIDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDescriptionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cDescriptionAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_7_0 = (RuleCall)cDescriptionAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cRewardKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cRewardAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cRewardRewardParserRuleCall_11_0 = (RuleCall)cRewardAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cTasksKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cColonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cLeftSquareBracketKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Assignment cTasksAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cTasksTaskParserRuleCall_16_0 = (RuleCall)cTasksAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cCommaKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cTasksAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cTasksTaskParserRuleCall_17_1_0 = (RuleCall)cTasksAssignment_17_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cRightCurlyBracketKeyword_19 = (Keyword)cGroup.eContents().get(19);
		
		//Achievement:
		//	'{'
		//	'name' ':' name=ID ','
		//	'description' ':' description=STRING ','
		//	'reward' ':' reward=Reward ','
		//	'tasks' ':' '[' tasks+=Task (',' tasks+=Task)* ']'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'name' ':' name=ID ',' 'description' ':' description=STRING ',' 'reward' ':' reward=Reward ',' 'tasks' ':' '['
		//tasks+=Task (',' tasks+=Task)* ']' '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_3_0() { return cNameIDTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'description'
		public Keyword getDescriptionKeyword_5() { return cDescriptionKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_7() { return cDescriptionAssignment_7; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_7_0() { return cDescriptionSTRINGTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'reward'
		public Keyword getRewardKeyword_9() { return cRewardKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//reward=Reward
		public Assignment getRewardAssignment_11() { return cRewardAssignment_11; }
		
		//Reward
		public RuleCall getRewardRewardParserRuleCall_11_0() { return cRewardRewardParserRuleCall_11_0; }
		
		//','
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }
		
		//'tasks'
		public Keyword getTasksKeyword_13() { return cTasksKeyword_13; }
		
		//':'
		public Keyword getColonKeyword_14() { return cColonKeyword_14; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_15() { return cLeftSquareBracketKeyword_15; }
		
		//tasks+=Task
		public Assignment getTasksAssignment_16() { return cTasksAssignment_16; }
		
		//Task
		public RuleCall getTasksTaskParserRuleCall_16_0() { return cTasksTaskParserRuleCall_16_0; }
		
		//(',' tasks+=Task)*
		public Group getGroup_17() { return cGroup_17; }
		
		//','
		public Keyword getCommaKeyword_17_0() { return cCommaKeyword_17_0; }
		
		//tasks+=Task
		public Assignment getTasksAssignment_17_1() { return cTasksAssignment_17_1; }
		
		//Task
		public RuleCall getTasksTaskParserRuleCall_17_1_0() { return cTasksTaskParserRuleCall_17_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_18() { return cRightSquareBracketKeyword_18; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_19() { return cRightCurlyBracketKeyword_19; }
	}
	public class RewardElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Reward");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cPointsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPointsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPointsINTTerminalRuleCall_3_0 = (RuleCall)cPointsAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cBadgePathKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cBadgePathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cBadgePathSTRINGTerminalRuleCall_7_0 = (RuleCall)cBadgePathAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cNotificationKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Keyword cColonKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cNotificationAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cNotificationNotificationParserRuleCall_8_3_0 = (RuleCall)cNotificationAssignment_8_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//Reward:
		//	'{'
		//	'points' ':' points=INT ','
		//	'badgePath' ':' badgePath=STRING (',' 'notification' ':' notification=Notification)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'points' ':' points=INT ',' 'badgePath' ':' badgePath=STRING (',' 'notification' ':' notification=Notification)? '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'points'
		public Keyword getPointsKeyword_1() { return cPointsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//points=INT
		public Assignment getPointsAssignment_3() { return cPointsAssignment_3; }
		
		//INT
		public RuleCall getPointsINTTerminalRuleCall_3_0() { return cPointsINTTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'badgePath'
		public Keyword getBadgePathKeyword_5() { return cBadgePathKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//badgePath=STRING
		public Assignment getBadgePathAssignment_7() { return cBadgePathAssignment_7; }
		
		//STRING
		public RuleCall getBadgePathSTRINGTerminalRuleCall_7_0() { return cBadgePathSTRINGTerminalRuleCall_7_0; }
		
		//(',' 'notification' ':' notification=Notification)?
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//'notification'
		public Keyword getNotificationKeyword_8_1() { return cNotificationKeyword_8_1; }
		
		//':'
		public Keyword getColonKeyword_8_2() { return cColonKeyword_8_2; }
		
		//notification=Notification
		public Assignment getNotificationAssignment_8_3() { return cNotificationAssignment_8_3; }
		
		//Notification
		public RuleCall getNotificationNotificationParserRuleCall_8_3_0() { return cNotificationNotificationParserRuleCall_8_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_9() { return cRightCurlyBracketKeyword_9; }
	}
	public class NotificationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Notification");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cMessageKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cMessageAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cMessageSTRINGTerminalRuleCall_3_0 = (RuleCall)cMessageAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cIconPathKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cIconPathAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cIconPathSTRINGTerminalRuleCall_7_0 = (RuleCall)cIconPathAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cSoundPathKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cSoundPathAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cSoundPathSTRINGTerminalRuleCall_11_0 = (RuleCall)cSoundPathAssignment_11.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_12 = (Keyword)cGroup.eContents().get(12);
		
		//Notification:
		//	'{'
		//	'message' ':' message=STRING ','
		//	'iconPath' ':' iconPath=STRING ','
		//	'soundPath' ':' soundPath=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'message' ':' message=STRING ',' 'iconPath' ':' iconPath=STRING ',' 'soundPath' ':' soundPath=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'message'
		public Keyword getMessageKeyword_1() { return cMessageKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//message=STRING
		public Assignment getMessageAssignment_3() { return cMessageAssignment_3; }
		
		//STRING
		public RuleCall getMessageSTRINGTerminalRuleCall_3_0() { return cMessageSTRINGTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'iconPath'
		public Keyword getIconPathKeyword_5() { return cIconPathKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//iconPath=STRING
		public Assignment getIconPathAssignment_7() { return cIconPathAssignment_7; }
		
		//STRING
		public RuleCall getIconPathSTRINGTerminalRuleCall_7_0() { return cIconPathSTRINGTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'soundPath'
		public Keyword getSoundPathKeyword_9() { return cSoundPathKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//soundPath=STRING
		public Assignment getSoundPathAssignment_11() { return cSoundPathAssignment_11; }
		
		//STRING
		public RuleCall getSoundPathSTRINGTerminalRuleCall_11_0() { return cSoundPathSTRINGTerminalRuleCall_11_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_12() { return cRightCurlyBracketKeyword_12; }
	}
	public class TaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.Game.Task");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cDescriptionKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cDescriptionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cDescriptionSTRINGTerminalRuleCall_3_0 = (RuleCall)cDescriptionAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cQueryKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cQueryNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cQueryNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cQueryNameAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Task:
		//	'{'
		//	'description' ':' description=STRING
		//	',' 'query' ':' queryName=STRING
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'description' ':' description=STRING ',' 'query' ':' queryName=STRING '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'description'
		public Keyword getDescriptionKeyword_1() { return cDescriptionKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//description=STRING
		public Assignment getDescriptionAssignment_3() { return cDescriptionAssignment_3; }
		
		//STRING
		public RuleCall getDescriptionSTRINGTerminalRuleCall_3_0() { return cDescriptionSTRINGTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'query'
		public Keyword getQueryKeyword_5() { return cQueryKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//queryName=STRING
		public Assignment getQueryNameAssignment_7() { return cQueryNameAssignment_7; }
		
		//STRING
		public RuleCall getQueryNameSTRINGTerminalRuleCall_7_0() { return cQueryNameSTRINGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	private final GameElements pGame;
	private final RewardableElements pRewardable;
	private final LevelElements pLevel;
	private final GroupElements pGroup;
	private final AchievementElements pAchievement;
	private final RewardElements pReward;
	private final NotificationElements pNotification;
	private final TaskElements pTask;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public GameGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pGame = new GameElements();
		this.pRewardable = new RewardableElements();
		this.pLevel = new LevelElements();
		this.pGroup = new GroupElements();
		this.pAchievement = new AchievementElements();
		this.pReward = new RewardElements();
		this.pNotification = new NotificationElements();
		this.pTask = new TaskElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("codeskills.designer.game.Game".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Game:
	//	'{'
	//	'levels' ':' '[' levels+=Level (',' levels+=Level)* ']'
	//	'}';
	public GameElements getGameAccess() {
		return pGame;
	}
	
	public ParserRule getGameRule() {
		return getGameAccess().getRule();
	}
	
	//Rewardable:
	//	Level | Group | Achievement;
	public RewardableElements getRewardableAccess() {
		return pRewardable;
	}
	
	public ParserRule getRewardableRule() {
		return getRewardableAccess().getRule();
	}
	
	//Level:
	//	'{'
	//	'name' ':' name=ID ','
	//	'description' ':' description=STRING ','
	//	'reward' ':' reward=Reward ','
	//	'groups' ':' '[' groups+=Group (',' groups+=Group)* ']'
	//	'}';
	public LevelElements getLevelAccess() {
		return pLevel;
	}
	
	public ParserRule getLevelRule() {
		return getLevelAccess().getRule();
	}
	
	//Group:
	//	'{'
	//	'name' ':' name=ID ','
	//	'description' ':' description=STRING ','
	//	'reward' ':' reward=Reward ','
	//	'achievements' ':' '[' achievements+=Achievement (',' achievements+=Achievement)* ']'
	//	'}';
	public GroupElements getGroupAccess() {
		return pGroup;
	}
	
	public ParserRule getGroupRule() {
		return getGroupAccess().getRule();
	}
	
	//Achievement:
	//	'{'
	//	'name' ':' name=ID ','
	//	'description' ':' description=STRING ','
	//	'reward' ':' reward=Reward ','
	//	'tasks' ':' '[' tasks+=Task (',' tasks+=Task)* ']'
	//	'}';
	public AchievementElements getAchievementAccess() {
		return pAchievement;
	}
	
	public ParserRule getAchievementRule() {
		return getAchievementAccess().getRule();
	}
	
	//Reward:
	//	'{'
	//	'points' ':' points=INT ','
	//	'badgePath' ':' badgePath=STRING (',' 'notification' ':' notification=Notification)?
	//	'}';
	public RewardElements getRewardAccess() {
		return pReward;
	}
	
	public ParserRule getRewardRule() {
		return getRewardAccess().getRule();
	}
	
	//Notification:
	//	'{'
	//	'message' ':' message=STRING ','
	//	'iconPath' ':' iconPath=STRING ','
	//	'soundPath' ':' soundPath=STRING
	//	'}';
	public NotificationElements getNotificationAccess() {
		return pNotification;
	}
	
	public ParserRule getNotificationRule() {
		return getNotificationAccess().getRule();
	}
	
	//Task:
	//	'{'
	//	'description' ':' description=STRING
	//	',' 'query' ':' queryName=STRING
	//	'}';
	public TaskElements getTaskAccess() {
		return pTask;
	}
	
	public ParserRule getTaskRule() {
		return getTaskAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
