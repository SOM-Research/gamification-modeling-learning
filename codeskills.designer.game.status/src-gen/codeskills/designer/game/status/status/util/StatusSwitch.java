/**
 * generated by Xtext 2.10.0
 */
package codeskills.designer.game.status.status.util;

import codeskills.designer.game.status.status.*;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see codeskills.designer.game.status.status.StatusPackage
 * @generated
 */
public class StatusSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static StatusPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StatusSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = StatusPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case StatusPackage.S:
      {
        S s = (S)theEObject;
        T result = caseS(s);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.GAME_S:
      {
        GameS gameS = (GameS)theEObject;
        T result = caseGameS(gameS);
        if (result == null) result = caseS(gameS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.LEVEL_S:
      {
        LevelS levelS = (LevelS)theEObject;
        T result = caseLevelS(levelS);
        if (result == null) result = caseS(levelS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.GROUP_S:
      {
        GroupS groupS = (GroupS)theEObject;
        T result = caseGroupS(groupS);
        if (result == null) result = caseS(groupS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.ACHIEVEMENT_S:
      {
        AchievementS achievementS = (AchievementS)theEObject;
        T result = caseAchievementS(achievementS);
        if (result == null) result = caseS(achievementS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.TASK_S:
      {
        TaskS taskS = (TaskS)theEObject;
        T result = caseTaskS(taskS);
        if (result == null) result = caseS(taskS);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case StatusPackage.STATUS:
      {
        Status status = (Status)theEObject;
        T result = caseStatus(status);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseS(S object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Game S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Game S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGameS(GameS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Level S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Level S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseLevelS(LevelS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Group S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Group S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseGroupS(GroupS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Achievement S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Achievement S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAchievementS(AchievementS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Task S</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Task S</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTaskS(TaskS object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Status</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Status</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseStatus(Status object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //StatusSwitch
