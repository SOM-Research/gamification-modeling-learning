/*
 * generated by Xtext 2.10.0
 */
package codeskills.designer.data.serializer;

import codeskills.designer.data.services.DataGrammarAccess;
import com.google.inject.Inject;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class DataSyntacticSequencer extends AbstractSyntacticSequencer {

	protected DataGrammarAccess grammarAccess;
	protected AbstractElementAlias match_File_CommaKeyword_12_0_q;
	protected AbstractElementAlias match_Folder___CommaKeyword_4_0_FoldersKeyword_4_1_ColonKeyword_4_2_LeftSquareBracketKeyword_4_3_RightSquareBracketKeyword_4_5__q;
	protected AbstractElementAlias match_Folder___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q;
	protected AbstractElementAlias match_Project___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q;
	protected AbstractElementAlias match_Project___CommaKeyword_6_0_FoldersKeyword_6_1_ColonKeyword_6_2_LeftSquareBracketKeyword_6_3_RightSquareBracketKeyword_6_5__q;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (DataGrammarAccess) access;
		match_File_CommaKeyword_12_0_q = new TokenAlias(false, true, grammarAccess.getFileAccess().getCommaKeyword_12_0());
		match_Folder___CommaKeyword_4_0_FoldersKeyword_4_1_ColonKeyword_4_2_LeftSquareBracketKeyword_4_3_RightSquareBracketKeyword_4_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getFolderAccess().getCommaKeyword_4_0()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getFoldersKeyword_4_1()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getColonKeyword_4_2()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getLeftSquareBracketKeyword_4_3()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getRightSquareBracketKeyword_4_5()));
		match_Folder___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getFolderAccess().getCommaKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getFilesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getColonKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getLeftSquareBracketKeyword_5_3()), new TokenAlias(false, false, grammarAccess.getFolderAccess().getRightSquareBracketKeyword_5_5()));
		match_Project___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getProjectAccess().getCommaKeyword_5_0()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getFilesKeyword_5_1()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getColonKeyword_5_2()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getLeftSquareBracketKeyword_5_3()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getRightSquareBracketKeyword_5_5()));
		match_Project___CommaKeyword_6_0_FoldersKeyword_6_1_ColonKeyword_6_2_LeftSquareBracketKeyword_6_3_RightSquareBracketKeyword_6_5__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getProjectAccess().getCommaKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getFoldersKeyword_6_1()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getColonKeyword_6_2()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getLeftSquareBracketKeyword_6_3()), new TokenAlias(false, false, grammarAccess.getProjectAccess().getRightSquareBracketKeyword_6_5()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getBOOLRule())
			return getBOOLToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * terminal BOOL returns ecore::EBoolean:
	 * 	'true' | 'false';
	 */
	protected String getBOOLToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "true";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_File_CommaKeyword_12_0_q.equals(syntax))
				emit_File_CommaKeyword_12_0_q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Folder___CommaKeyword_4_0_FoldersKeyword_4_1_ColonKeyword_4_2_LeftSquareBracketKeyword_4_3_RightSquareBracketKeyword_4_5__q.equals(syntax))
				emit_Folder___CommaKeyword_4_0_FoldersKeyword_4_1_ColonKeyword_4_2_LeftSquareBracketKeyword_4_3_RightSquareBracketKeyword_4_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Folder___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q.equals(syntax))
				emit_Folder___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Project___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q.equals(syntax))
				emit_Project___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Project___CommaKeyword_6_0_FoldersKeyword_6_1_ColonKeyword_6_2_LeftSquareBracketKeyword_6_3_RightSquareBracketKeyword_6_5__q.equals(syntax))
				emit_Project___CommaKeyword_6_0_FoldersKeyword_6_1_ColonKeyword_6_2_LeftSquareBracketKeyword_6_3_RightSquareBracketKeyword_6_5__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ','?
	 *
	 * This ambiguous syntax occurs at:
	 *     changed?=BOOL (ambiguity) '}' (rule end)
	 *     ext=STRING ',' 'changed' ':' (ambiguity) '}' (rule end)
	 */
	protected void emit_File_CommaKeyword_12_0_q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' 'folders' ':' '[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=STRING (ambiguity) ',' 'files' ':' '[' files+=File
	 *     name=STRING (ambiguity) (',' 'files' ':' '[' ']')? '}' (rule end)
	 */
	protected void emit_Folder___CommaKeyword_4_0_FoldersKeyword_4_1_ColonKeyword_4_2_LeftSquareBracketKeyword_4_3_RightSquareBracketKeyword_4_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' 'files' ':' '[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     folders+=Folder ']' (ambiguity) '}' (rule end)
	 *     name=STRING (',' 'folders' ':' '[' ']')? (ambiguity) '}' (rule end)
	 */
	protected void emit_Folder___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' 'files' ':' '[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     name=STRING (ambiguity) ',' 'folders' ':' '[' folders+=Folder
	 *     name=STRING (ambiguity) (',' 'folders' ':' '[' ']')? '}' (rule end)
	 */
	protected void emit_Project___CommaKeyword_5_0_FilesKeyword_5_1_ColonKeyword_5_2_LeftSquareBracketKeyword_5_3_RightSquareBracketKeyword_5_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * Ambiguous syntax:
	 *     (',' 'folders' ':' '[' ']')?
	 *
	 * This ambiguous syntax occurs at:
	 *     files+=File ']' (ambiguity) '}' (rule end)
	 *     name=STRING (',' 'files' ':' '[' ']')? (ambiguity) '}' (rule end)
	 */
	protected void emit_Project___CommaKeyword_6_0_FoldersKeyword_6_1_ColonKeyword_6_2_LeftSquareBracketKeyword_6_3_RightSquareBracketKeyword_6_5__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
