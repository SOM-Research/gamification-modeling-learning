/*
 * generated by Xtext 2.10.0
 */
package codeskills.designer.game.status.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class StatusGrammarAccess extends AbstractGrammarElementFinder {
	
	public class SElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.S");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGameSParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLevelSParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cGroupSParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAchievementSParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cTaskSParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//S:
		//	GameS | LevelS | GroupS | AchievementS | TaskS;
		@Override public ParserRule getRule() { return rule; }
		
		//GameS | LevelS | GroupS | AchievementS | TaskS
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GameS
		public RuleCall getGameSParserRuleCall_0() { return cGameSParserRuleCall_0; }
		
		//LevelS
		public RuleCall getLevelSParserRuleCall_1() { return cLevelSParserRuleCall_1; }
		
		//GroupS
		public RuleCall getGroupSParserRuleCall_2() { return cGroupSParserRuleCall_2; }
		
		//AchievementS
		public RuleCall getAchievementSParserRuleCall_3() { return cAchievementSParserRuleCall_3; }
		
		//TaskS
		public RuleCall getTaskSParserRuleCall_4() { return cTaskSParserRuleCall_4; }
	}
	public class GameSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.GameS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLevelsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLevelsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLevelsLevelSParserRuleCall_4_0 = (RuleCall)cLevelsAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cLevelsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cLevelsLevelSParserRuleCall_5_1_0 = (RuleCall)cLevelsAssignment_5_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cSignatureAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cSignatureSTRINGTerminalRuleCall_7_0 = (RuleCall)cSignatureAssignment_7.eContents().get(0);
		private final Assignment cCreatedAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cCreatedLONGTerminalRuleCall_8_0 = (RuleCall)cCreatedAssignment_8.eContents().get(0);
		private final Assignment cStatusAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cStatusStatusParserRuleCall_9_0 = (RuleCall)cStatusAssignment_9.eContents().get(0);
		private final Assignment cCurrentScoreAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cCurrentScoreINTTerminalRuleCall_10_0 = (RuleCall)cCurrentScoreAssignment_10.eContents().get(0);
		
		//GameS:
		//	'game'
		//	'levels' ':' '[' levels+=LevelS (',' levels+=LevelS)* ']'
		//	signature=STRING
		//	created=LONG
		//	status=Status
		//	currentScore=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//'game' 'levels' ':' '[' levels+=LevelS (',' levels+=LevelS)* ']' signature=STRING created=LONG status=Status
		//currentScore=INT
		public Group getGroup() { return cGroup; }
		
		//'game'
		public Keyword getGameKeyword_0() { return cGameKeyword_0; }
		
		//'levels'
		public Keyword getLevelsKeyword_1() { return cLevelsKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_3() { return cLeftSquareBracketKeyword_3; }
		
		//levels+=LevelS
		public Assignment getLevelsAssignment_4() { return cLevelsAssignment_4; }
		
		//LevelS
		public RuleCall getLevelsLevelSParserRuleCall_4_0() { return cLevelsLevelSParserRuleCall_4_0; }
		
		//(',' levels+=LevelS)*
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//levels+=LevelS
		public Assignment getLevelsAssignment_5_1() { return cLevelsAssignment_5_1; }
		
		//LevelS
		public RuleCall getLevelsLevelSParserRuleCall_5_1_0() { return cLevelsLevelSParserRuleCall_5_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6() { return cRightSquareBracketKeyword_6; }
		
		//signature=STRING
		public Assignment getSignatureAssignment_7() { return cSignatureAssignment_7; }
		
		//STRING
		public RuleCall getSignatureSTRINGTerminalRuleCall_7_0() { return cSignatureSTRINGTerminalRuleCall_7_0; }
		
		//created=LONG
		public Assignment getCreatedAssignment_8() { return cCreatedAssignment_8; }
		
		//LONG
		public RuleCall getCreatedLONGTerminalRuleCall_8_0() { return cCreatedLONGTerminalRuleCall_8_0; }
		
		//status=Status
		public Assignment getStatusAssignment_9() { return cStatusAssignment_9; }
		
		//Status
		public RuleCall getStatusStatusParserRuleCall_9_0() { return cStatusStatusParserRuleCall_9_0; }
		
		//currentScore=INT
		public Assignment getCurrentScoreAssignment_10() { return cCurrentScoreAssignment_10; }
		
		//INT
		public RuleCall getCurrentScoreINTTerminalRuleCall_10_0() { return cCurrentScoreINTTerminalRuleCall_10_0; }
	}
	public class LevelSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.LevelS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLevelKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cLevelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cLevelLevelCrossReference_1_0 = (CrossReference)cLevelAssignment_1.eContents().get(0);
		private final RuleCall cLevelLevelIDTerminalRuleCall_1_0_1 = (RuleCall)cLevelLevelCrossReference_1_0.eContents().get(1);
		private final Assignment cStatusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusStatusParserRuleCall_2_0 = (RuleCall)cStatusAssignment_2.eContents().get(0);
		private final Assignment cIsCurrentAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIsCurrentBOOLTerminalRuleCall_3_0 = (RuleCall)cIsCurrentAssignment_3.eContents().get(0);
		private final Keyword cGroupsKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cColonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cLeftSquareBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cGroupsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cGroupsGroupSParserRuleCall_7_0 = (RuleCall)cGroupsAssignment_7.eContents().get(0);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cCommaKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cGroupsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cGroupsGroupSParserRuleCall_8_1_0 = (RuleCall)cGroupsAssignment_8_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_9 = (Keyword)cGroup.eContents().get(9);
		
		//LevelS:
		//	'level'
		//	level=[game::Level] status=Status
		//	isCurrent?=BOOL?
		//	'groups' ':' '[' groups+=GroupS (',' groups+=GroupS)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'level' level=[game::Level] status=Status isCurrent?=BOOL? 'groups' ':' '[' groups+=GroupS (',' groups+=GroupS)* ']'
		public Group getGroup() { return cGroup; }
		
		//'level'
		public Keyword getLevelKeyword_0() { return cLevelKeyword_0; }
		
		//level=[game::Level]
		public Assignment getLevelAssignment_1() { return cLevelAssignment_1; }
		
		//[game::Level]
		public CrossReference getLevelLevelCrossReference_1_0() { return cLevelLevelCrossReference_1_0; }
		
		//ID
		public RuleCall getLevelLevelIDTerminalRuleCall_1_0_1() { return cLevelLevelIDTerminalRuleCall_1_0_1; }
		
		//status=Status
		public Assignment getStatusAssignment_2() { return cStatusAssignment_2; }
		
		//Status
		public RuleCall getStatusStatusParserRuleCall_2_0() { return cStatusStatusParserRuleCall_2_0; }
		
		//isCurrent?=BOOL?
		public Assignment getIsCurrentAssignment_3() { return cIsCurrentAssignment_3; }
		
		//BOOL
		public RuleCall getIsCurrentBOOLTerminalRuleCall_3_0() { return cIsCurrentBOOLTerminalRuleCall_3_0; }
		
		//'groups'
		public Keyword getGroupsKeyword_4() { return cGroupsKeyword_4; }
		
		//':'
		public Keyword getColonKeyword_5() { return cColonKeyword_5; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6() { return cLeftSquareBracketKeyword_6; }
		
		//groups+=GroupS
		public Assignment getGroupsAssignment_7() { return cGroupsAssignment_7; }
		
		//GroupS
		public RuleCall getGroupsGroupSParserRuleCall_7_0() { return cGroupsGroupSParserRuleCall_7_0; }
		
		//(',' groups+=GroupS)*
		public Group getGroup_8() { return cGroup_8; }
		
		//','
		public Keyword getCommaKeyword_8_0() { return cCommaKeyword_8_0; }
		
		//groups+=GroupS
		public Assignment getGroupsAssignment_8_1() { return cGroupsAssignment_8_1; }
		
		//GroupS
		public RuleCall getGroupsGroupSParserRuleCall_8_1_0() { return cGroupsGroupSParserRuleCall_8_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_9() { return cRightSquareBracketKeyword_9; }
	}
	public class GroupSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.GroupS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGroupKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGroupAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cGroupGroupCrossReference_1_0 = (CrossReference)cGroupAssignment_1.eContents().get(0);
		private final RuleCall cGroupGroupIDTerminalRuleCall_1_0_1 = (RuleCall)cGroupGroupCrossReference_1_0.eContents().get(1);
		private final Assignment cStatusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusStatusParserRuleCall_2_0 = (RuleCall)cStatusAssignment_2.eContents().get(0);
		private final Keyword cAchievementsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cAchievementsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cAchievementsAchievementSParserRuleCall_6_0 = (RuleCall)cAchievementsAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cAchievementsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cAchievementsAchievementSParserRuleCall_7_1_0 = (RuleCall)cAchievementsAssignment_7_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//GroupS:
		//	'group'
		//	group=[game::Group] status=Status
		//	'achievements' ':' '[' achievements+=AchievementS (',' achievements+=AchievementS)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'group' group=[game::Group] status=Status 'achievements' ':' '[' achievements+=AchievementS (','
		//achievements+=AchievementS)* ']'
		public Group getGroup() { return cGroup; }
		
		//'group'
		public Keyword getGroupKeyword_0() { return cGroupKeyword_0; }
		
		//group=[game::Group]
		public Assignment getGroupAssignment_1() { return cGroupAssignment_1; }
		
		//[game::Group]
		public CrossReference getGroupGroupCrossReference_1_0() { return cGroupGroupCrossReference_1_0; }
		
		//ID
		public RuleCall getGroupGroupIDTerminalRuleCall_1_0_1() { return cGroupGroupIDTerminalRuleCall_1_0_1; }
		
		//status=Status
		public Assignment getStatusAssignment_2() { return cStatusAssignment_2; }
		
		//Status
		public RuleCall getStatusStatusParserRuleCall_2_0() { return cStatusStatusParserRuleCall_2_0; }
		
		//'achievements'
		public Keyword getAchievementsKeyword_3() { return cAchievementsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//achievements+=AchievementS
		public Assignment getAchievementsAssignment_6() { return cAchievementsAssignment_6; }
		
		//AchievementS
		public RuleCall getAchievementsAchievementSParserRuleCall_6_0() { return cAchievementsAchievementSParserRuleCall_6_0; }
		
		//(',' achievements+=AchievementS)*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//achievements+=AchievementS
		public Assignment getAchievementsAssignment_7_1() { return cAchievementsAssignment_7_1; }
		
		//AchievementS
		public RuleCall getAchievementsAchievementSParserRuleCall_7_1_0() { return cAchievementsAchievementSParserRuleCall_7_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
	}
	public class AchievementSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.AchievementS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAchievementKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAchievementAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cAchievementAchievementCrossReference_1_0 = (CrossReference)cAchievementAssignment_1.eContents().get(0);
		private final RuleCall cAchievementAchievementIDTerminalRuleCall_1_0_1 = (RuleCall)cAchievementAchievementCrossReference_1_0.eContents().get(1);
		private final Assignment cStatusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusStatusParserRuleCall_2_0 = (RuleCall)cStatusAssignment_2.eContents().get(0);
		private final Keyword cTasksKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTasksAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTasksTaskSParserRuleCall_6_0 = (RuleCall)cTasksAssignment_6.eContents().get(0);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cCommaKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTasksAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTasksTaskSParserRuleCall_7_1_0 = (RuleCall)cTasksAssignment_7_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//AchievementS:
		//	'achievement'
		//	achievement=[game::Achievement] status=Status
		//	'tasks' ':' '[' tasks+=TaskS (',' tasks+=TaskS)* ']';
		@Override public ParserRule getRule() { return rule; }
		
		//'achievement' achievement=[game::Achievement] status=Status 'tasks' ':' '[' tasks+=TaskS (',' tasks+=TaskS)* ']'
		public Group getGroup() { return cGroup; }
		
		//'achievement'
		public Keyword getAchievementKeyword_0() { return cAchievementKeyword_0; }
		
		//achievement=[game::Achievement]
		public Assignment getAchievementAssignment_1() { return cAchievementAssignment_1; }
		
		//[game::Achievement]
		public CrossReference getAchievementAchievementCrossReference_1_0() { return cAchievementAchievementCrossReference_1_0; }
		
		//ID
		public RuleCall getAchievementAchievementIDTerminalRuleCall_1_0_1() { return cAchievementAchievementIDTerminalRuleCall_1_0_1; }
		
		//status=Status
		public Assignment getStatusAssignment_2() { return cStatusAssignment_2; }
		
		//Status
		public RuleCall getStatusStatusParserRuleCall_2_0() { return cStatusStatusParserRuleCall_2_0; }
		
		//'tasks'
		public Keyword getTasksKeyword_3() { return cTasksKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5() { return cLeftSquareBracketKeyword_5; }
		
		//tasks+=TaskS
		public Assignment getTasksAssignment_6() { return cTasksAssignment_6; }
		
		//TaskS
		public RuleCall getTasksTaskSParserRuleCall_6_0() { return cTasksTaskSParserRuleCall_6_0; }
		
		//(',' tasks+=TaskS)*
		public Group getGroup_7() { return cGroup_7; }
		
		//','
		public Keyword getCommaKeyword_7_0() { return cCommaKeyword_7_0; }
		
		//tasks+=TaskS
		public Assignment getTasksAssignment_7_1() { return cTasksAssignment_7_1; }
		
		//TaskS
		public RuleCall getTasksTaskSParserRuleCall_7_1_0() { return cTasksTaskSParserRuleCall_7_1_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_8() { return cRightSquareBracketKeyword_8; }
	}
	public class TaskSElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.TaskS");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cTaskKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTaskAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cTaskTaskCrossReference_1_0 = (CrossReference)cTaskAssignment_1.eContents().get(0);
		private final RuleCall cTaskTaskIDTerminalRuleCall_1_0_1 = (RuleCall)cTaskTaskCrossReference_1_0.eContents().get(1);
		private final Assignment cStatusAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStatusStatusParserRuleCall_2_0 = (RuleCall)cStatusAssignment_2.eContents().get(0);
		
		//TaskS:
		//	'task'
		//	task=[game::Task] status=Status;
		@Override public ParserRule getRule() { return rule; }
		
		//'task' task=[game::Task] status=Status
		public Group getGroup() { return cGroup; }
		
		//'task'
		public Keyword getTaskKeyword_0() { return cTaskKeyword_0; }
		
		//task=[game::Task]
		public Assignment getTaskAssignment_1() { return cTaskAssignment_1; }
		
		//[game::Task]
		public CrossReference getTaskTaskCrossReference_1_0() { return cTaskTaskCrossReference_1_0; }
		
		//ID
		public RuleCall getTaskTaskIDTerminalRuleCall_1_0_1() { return cTaskTaskIDTerminalRuleCall_1_0_1; }
		
		//status=Status
		public Assignment getStatusAssignment_2() { return cStatusAssignment_2; }
		
		//Status
		public RuleCall getStatusStatusParserRuleCall_2_0() { return cStatusStatusParserRuleCall_2_0; }
	}
	public class StatusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.Status");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cCompleteKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cCompleteAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cCompleteBOOLTerminalRuleCall_3_0 = (RuleCall)cCompleteAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cDateKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cMillisecondsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cMillisecondsLONGTerminalRuleCall_7_0 = (RuleCall)cMillisecondsAssignment_7.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		
		//Status:
		//	'{'
		//	'complete' ':' complete?=BOOL ','
		//	'date' ':' milliseconds=LONG
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'complete' ':' complete?=BOOL ',' 'date' ':' milliseconds=LONG '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'complete'
		public Keyword getCompleteKeyword_1() { return cCompleteKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//complete?=BOOL
		public Assignment getCompleteAssignment_3() { return cCompleteAssignment_3; }
		
		//BOOL
		public RuleCall getCompleteBOOLTerminalRuleCall_3_0() { return cCompleteBOOLTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'date'
		public Keyword getDateKeyword_5() { return cDateKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//milliseconds=LONG
		public Assignment getMillisecondsAssignment_7() { return cMillisecondsAssignment_7; }
		
		//LONG
		public RuleCall getMillisecondsLONGTerminalRuleCall_7_0() { return cMillisecondsLONGTerminalRuleCall_7_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }
	}
	
	
	private final SElements pS;
	private final GameSElements pGameS;
	private final LevelSElements pLevelS;
	private final GroupSElements pGroupS;
	private final AchievementSElements pAchievementS;
	private final TaskSElements pTaskS;
	private final StatusElements pStatus;
	private final TerminalRule tLONG;
	private final TerminalRule tBOOL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public StatusGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pS = new SElements();
		this.pGameS = new GameSElements();
		this.pLevelS = new LevelSElements();
		this.pGroupS = new GroupSElements();
		this.pAchievementS = new AchievementSElements();
		this.pTaskS = new TaskSElements();
		this.pStatus = new StatusElements();
		this.tLONG = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.LONG");
		this.tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.game.status.Status.BOOL");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("codeskills.designer.game.status.Status".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//S:
	//	GameS | LevelS | GroupS | AchievementS | TaskS;
	public SElements getSAccess() {
		return pS;
	}
	
	public ParserRule getSRule() {
		return getSAccess().getRule();
	}
	
	//GameS:
	//	'game'
	//	'levels' ':' '[' levels+=LevelS (',' levels+=LevelS)* ']'
	//	signature=STRING
	//	created=LONG
	//	status=Status
	//	currentScore=INT;
	public GameSElements getGameSAccess() {
		return pGameS;
	}
	
	public ParserRule getGameSRule() {
		return getGameSAccess().getRule();
	}
	
	//LevelS:
	//	'level'
	//	level=[game::Level] status=Status
	//	isCurrent?=BOOL?
	//	'groups' ':' '[' groups+=GroupS (',' groups+=GroupS)* ']';
	public LevelSElements getLevelSAccess() {
		return pLevelS;
	}
	
	public ParserRule getLevelSRule() {
		return getLevelSAccess().getRule();
	}
	
	//GroupS:
	//	'group'
	//	group=[game::Group] status=Status
	//	'achievements' ':' '[' achievements+=AchievementS (',' achievements+=AchievementS)* ']';
	public GroupSElements getGroupSAccess() {
		return pGroupS;
	}
	
	public ParserRule getGroupSRule() {
		return getGroupSAccess().getRule();
	}
	
	//AchievementS:
	//	'achievement'
	//	achievement=[game::Achievement] status=Status
	//	'tasks' ':' '[' tasks+=TaskS (',' tasks+=TaskS)* ']';
	public AchievementSElements getAchievementSAccess() {
		return pAchievementS;
	}
	
	public ParserRule getAchievementSRule() {
		return getAchievementSAccess().getRule();
	}
	
	//TaskS:
	//	'task'
	//	task=[game::Task] status=Status;
	public TaskSElements getTaskSAccess() {
		return pTaskS;
	}
	
	public ParserRule getTaskSRule() {
		return getTaskSAccess().getRule();
	}
	
	//Status:
	//	'{'
	//	'complete' ':' complete?=BOOL ','
	//	'date' ':' milliseconds=LONG
	//	'}';
	public StatusElements getStatusAccess() {
		return pStatus;
	}
	
	public ParserRule getStatusRule() {
		return getStatusAccess().getRule();
	}
	
	//terminal LONG returns ecore::ELong:
	//	'0'..'9'+;
	public TerminalRule getLONGRule() {
		return tLONG;
	}
	
	//terminal BOOL returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLRule() {
		return tBOOL;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
