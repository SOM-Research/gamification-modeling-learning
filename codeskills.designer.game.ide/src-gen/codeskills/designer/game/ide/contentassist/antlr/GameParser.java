/*
 * generated by Xtext 2.10.0
 */
package codeskills.designer.game.ide.contentassist.antlr;

import codeskills.designer.game.ide.contentassist.antlr.internal.InternalGameParser;
import codeskills.designer.game.services.GameGrammarAccess;
import com.google.inject.Inject;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

public class GameParser extends AbstractContentAssistParser {

	@Inject
	private GameGrammarAccess grammarAccess;

	private Map<AbstractElement, String> nameMappings;

	@Override
	protected InternalGameParser createParser() {
		InternalGameParser result = new InternalGameParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRewardableAccess().getAlternatives(), "rule__Rewardable__Alternatives");
					put(grammarAccess.getGameAccess().getGroup(), "rule__Game__Group__0");
					put(grammarAccess.getGameAccess().getGroup_5(), "rule__Game__Group_5__0");
					put(grammarAccess.getLevelAccess().getGroup(), "rule__Level__Group__0");
					put(grammarAccess.getLevelAccess().getGroup_17(), "rule__Level__Group_17__0");
					put(grammarAccess.getGroupAccess().getGroup(), "rule__Group__Group__0");
					put(grammarAccess.getGroupAccess().getGroup_17(), "rule__Group__Group_17__0");
					put(grammarAccess.getAchievementAccess().getGroup(), "rule__Achievement__Group__0");
					put(grammarAccess.getAchievementAccess().getGroup_17(), "rule__Achievement__Group_17__0");
					put(grammarAccess.getRewardAccess().getGroup(), "rule__Reward__Group__0");
					put(grammarAccess.getRewardAccess().getGroup_8(), "rule__Reward__Group_8__0");
					put(grammarAccess.getNotificationAccess().getGroup(), "rule__Notification__Group__0");
					put(grammarAccess.getTaskAccess().getGroup(), "rule__Task__Group__0");
					put(grammarAccess.getGameAccess().getLevelsAssignment_4(), "rule__Game__LevelsAssignment_4");
					put(grammarAccess.getGameAccess().getLevelsAssignment_5_1(), "rule__Game__LevelsAssignment_5_1");
					put(grammarAccess.getLevelAccess().getNameAssignment_3(), "rule__Level__NameAssignment_3");
					put(grammarAccess.getLevelAccess().getDescriptionAssignment_7(), "rule__Level__DescriptionAssignment_7");
					put(grammarAccess.getLevelAccess().getRewardAssignment_11(), "rule__Level__RewardAssignment_11");
					put(grammarAccess.getLevelAccess().getGroupsAssignment_16(), "rule__Level__GroupsAssignment_16");
					put(grammarAccess.getLevelAccess().getGroupsAssignment_17_1(), "rule__Level__GroupsAssignment_17_1");
					put(grammarAccess.getGroupAccess().getNameAssignment_3(), "rule__Group__NameAssignment_3");
					put(grammarAccess.getGroupAccess().getDescriptionAssignment_7(), "rule__Group__DescriptionAssignment_7");
					put(grammarAccess.getGroupAccess().getRewardAssignment_11(), "rule__Group__RewardAssignment_11");
					put(grammarAccess.getGroupAccess().getAchievementsAssignment_16(), "rule__Group__AchievementsAssignment_16");
					put(grammarAccess.getGroupAccess().getAchievementsAssignment_17_1(), "rule__Group__AchievementsAssignment_17_1");
					put(grammarAccess.getAchievementAccess().getNameAssignment_3(), "rule__Achievement__NameAssignment_3");
					put(grammarAccess.getAchievementAccess().getDescriptionAssignment_7(), "rule__Achievement__DescriptionAssignment_7");
					put(grammarAccess.getAchievementAccess().getRewardAssignment_11(), "rule__Achievement__RewardAssignment_11");
					put(grammarAccess.getAchievementAccess().getTasksAssignment_16(), "rule__Achievement__TasksAssignment_16");
					put(grammarAccess.getAchievementAccess().getTasksAssignment_17_1(), "rule__Achievement__TasksAssignment_17_1");
					put(grammarAccess.getRewardAccess().getPointsAssignment_3(), "rule__Reward__PointsAssignment_3");
					put(grammarAccess.getRewardAccess().getBadgePathAssignment_7(), "rule__Reward__BadgePathAssignment_7");
					put(grammarAccess.getRewardAccess().getNotificationAssignment_8_3(), "rule__Reward__NotificationAssignment_8_3");
					put(grammarAccess.getNotificationAccess().getMessageAssignment_3(), "rule__Notification__MessageAssignment_3");
					put(grammarAccess.getNotificationAccess().getIconPathAssignment_7(), "rule__Notification__IconPathAssignment_7");
					put(grammarAccess.getNotificationAccess().getSoundPathAssignment_11(), "rule__Notification__SoundPathAssignment_11");
					put(grammarAccess.getTaskAccess().getDescriptionAssignment_3(), "rule__Task__DescriptionAssignment_3");
					put(grammarAccess.getTaskAccess().getQueryNameAssignment_7(), "rule__Task__QueryNameAssignment_7");
				}
			};
		}
		return nameMappings.get(element);
	}

	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			InternalGameParser typedParser = (InternalGameParser) parser;
			typedParser.entryRuleGame();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public GameGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(GameGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
