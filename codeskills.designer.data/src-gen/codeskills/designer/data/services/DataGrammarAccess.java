/*
 * generated by Xtext 2.10.0
 */
package codeskills.designer.data.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class DataGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.Resource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cContainerResourceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFileParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Resource:
		//	ContainerResource | File;
		@Override public ParserRule getRule() { return rule; }
		
		//ContainerResource | File
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ContainerResource
		public RuleCall getContainerResourceParserRuleCall_0() { return cContainerResourceParserRuleCall_0; }
		
		//File
		public RuleCall getFileParserRuleCall_1() { return cFileParserRuleCall_1; }
	}
	public class ContainerResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.ContainerResource");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cProjectParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFolderParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ContainerResource:
		//	Project | Folder;
		@Override public ParserRule getRule() { return rule; }
		
		//Project | Folder
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Project
		public RuleCall getProjectParserRuleCall_0() { return cProjectParserRuleCall_0; }
		
		//Folder
		public RuleCall getFolderParserRuleCall_1() { return cFolderParserRuleCall_1; }
	}
	public class ProjectElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.Project");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cProjectKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameSTRINGTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cFilesKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cColonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cFilesAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cFilesFileParserRuleCall_5_4_0 = (RuleCall)cFilesAssignment_5_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cFoldersKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Keyword cColonKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final Assignment cFoldersAssignment_6_4 = (Assignment)cGroup_6.eContents().get(4);
		private final RuleCall cFoldersFolderParserRuleCall_6_4_0 = (RuleCall)cFoldersAssignment_6_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_6_5 = (Keyword)cGroup_6.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//Project:
		//	'project'
		//	'{'
		//	'name' ':' name=STRING (',' 'files' ':' '[' files+=File* ']')? (',' 'folders' ':' '[' folders+=Folder* ']')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'project' '{' 'name' ':' name=STRING (',' 'files' ':' '[' files+=File* ']')? (',' 'folders' ':' '[' folders+=Folder*
		//']')? '}'
		public Group getGroup() { return cGroup; }
		
		//'project'
		public Keyword getProjectKeyword_0() { return cProjectKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=STRING
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_4_0() { return cNameSTRINGTerminalRuleCall_4_0; }
		
		//(',' 'files' ':' '[' files+=File* ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//'files'
		public Keyword getFilesKeyword_5_1() { return cFilesKeyword_5_1; }
		
		//':'
		public Keyword getColonKeyword_5_2() { return cColonKeyword_5_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_3() { return cLeftSquareBracketKeyword_5_3; }
		
		//files+=File*
		public Assignment getFilesAssignment_5_4() { return cFilesAssignment_5_4; }
		
		//File
		public RuleCall getFilesFileParserRuleCall_5_4_0() { return cFilesFileParserRuleCall_5_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_5() { return cRightSquareBracketKeyword_5_5; }
		
		//(',' 'folders' ':' '[' folders+=Folder* ']')?
		public Group getGroup_6() { return cGroup_6; }
		
		//','
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }
		
		//'folders'
		public Keyword getFoldersKeyword_6_1() { return cFoldersKeyword_6_1; }
		
		//':'
		public Keyword getColonKeyword_6_2() { return cColonKeyword_6_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_6_3() { return cLeftSquareBracketKeyword_6_3; }
		
		//folders+=Folder*
		public Assignment getFoldersAssignment_6_4() { return cFoldersAssignment_6_4; }
		
		//Folder
		public RuleCall getFoldersFolderParserRuleCall_6_4_0() { return cFoldersFolderParserRuleCall_6_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_6_5() { return cRightSquareBracketKeyword_6_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class FolderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.Folder");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cFoldersKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final Keyword cColonKeyword_4_2 = (Keyword)cGroup_4.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cFoldersAssignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cFoldersFolderParserRuleCall_4_4_0 = (RuleCall)cFoldersAssignment_4_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_4_5 = (Keyword)cGroup_4.eContents().get(5);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cCommaKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cFilesKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Keyword cColonKeyword_5_2 = (Keyword)cGroup_5.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final Assignment cFilesAssignment_5_4 = (Assignment)cGroup_5.eContents().get(4);
		private final RuleCall cFilesFileParserRuleCall_5_4_0 = (RuleCall)cFilesAssignment_5_4.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_5_5 = (Keyword)cGroup_5.eContents().get(5);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Folder:
		//	'{' 'name' ':' name=STRING (',' 'folders' ':' '[' folders+=Folder* ']')? (',' 'files' ':' '[' files+=File* ']')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'name' ':' name=STRING (',' 'folders' ':' '[' folders+=Folder* ']')? (',' 'files' ':' '[' files+=File* ']')? '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//(',' 'folders' ':' '[' folders+=Folder* ']')?
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//'folders'
		public Keyword getFoldersKeyword_4_1() { return cFoldersKeyword_4_1; }
		
		//':'
		public Keyword getColonKeyword_4_2() { return cColonKeyword_4_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_4_3() { return cLeftSquareBracketKeyword_4_3; }
		
		//folders+=Folder*
		public Assignment getFoldersAssignment_4_4() { return cFoldersAssignment_4_4; }
		
		//Folder
		public RuleCall getFoldersFolderParserRuleCall_4_4_0() { return cFoldersFolderParserRuleCall_4_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_4_5() { return cRightSquareBracketKeyword_4_5; }
		
		//(',' 'files' ':' '[' files+=File* ']')?
		public Group getGroup_5() { return cGroup_5; }
		
		//','
		public Keyword getCommaKeyword_5_0() { return cCommaKeyword_5_0; }
		
		//'files'
		public Keyword getFilesKeyword_5_1() { return cFilesKeyword_5_1; }
		
		//':'
		public Keyword getColonKeyword_5_2() { return cColonKeyword_5_2; }
		
		//'['
		public Keyword getLeftSquareBracketKeyword_5_3() { return cLeftSquareBracketKeyword_5_3; }
		
		//files+=File*
		public Assignment getFilesAssignment_5_4() { return cFilesAssignment_5_4; }
		
		//File
		public RuleCall getFilesFileParserRuleCall_5_4_0() { return cFilesFileParserRuleCall_5_4_0; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5_5() { return cRightSquareBracketKeyword_5_5; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class FileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.File");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameSTRINGTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cCommaKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cExtKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cExtAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cExtSTRINGTerminalRuleCall_7_0 = (RuleCall)cExtAssignment_7.eContents().get(0);
		private final Keyword cCommaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cChangedKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cChangedAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cChangedBOOLTerminalRuleCall_11_0 = (RuleCall)cChangedAssignment_11.eContents().get(0);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cCommaKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cModelAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final CrossReference cModelEObjectCrossReference_12_1_0 = (CrossReference)cModelAssignment_12_1.eContents().get(0);
		private final RuleCall cModelEObjectIDTerminalRuleCall_12_1_0_1 = (RuleCall)cModelEObjectCrossReference_12_1_0.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_13 = (Keyword)cGroup.eContents().get(13);
		
		//File:
		//	'{' 'name' ':' name=STRING ',' 'ext' ':' ext=STRING ',' 'changed' ':' changed?=BOOL? (',' model+=[ecore::EObject]*)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'{' 'name' ':' name=STRING ',' 'ext' ':' ext=STRING ',' 'changed' ':' changed?=BOOL? (',' model+=[ecore::EObject]*)? '}'
		public Group getGroup() { return cGroup; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }
		
		//'name'
		public Keyword getNameKeyword_1() { return cNameKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//name=STRING
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_3_0() { return cNameSTRINGTerminalRuleCall_3_0; }
		
		//','
		public Keyword getCommaKeyword_4() { return cCommaKeyword_4; }
		
		//'ext'
		public Keyword getExtKeyword_5() { return cExtKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//ext=STRING
		public Assignment getExtAssignment_7() { return cExtAssignment_7; }
		
		//STRING
		public RuleCall getExtSTRINGTerminalRuleCall_7_0() { return cExtSTRINGTerminalRuleCall_7_0; }
		
		//','
		public Keyword getCommaKeyword_8() { return cCommaKeyword_8; }
		
		//'changed'
		public Keyword getChangedKeyword_9() { return cChangedKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//changed?=BOOL?
		public Assignment getChangedAssignment_11() { return cChangedAssignment_11; }
		
		//BOOL
		public RuleCall getChangedBOOLTerminalRuleCall_11_0() { return cChangedBOOLTerminalRuleCall_11_0; }
		
		//(',' model+=[ecore::EObject]*)?
		public Group getGroup_12() { return cGroup_12; }
		
		//','
		public Keyword getCommaKeyword_12_0() { return cCommaKeyword_12_0; }
		
		//model+=[ecore::EObject]*
		public Assignment getModelAssignment_12_1() { return cModelAssignment_12_1; }
		
		//[ecore::EObject]
		public CrossReference getModelEObjectCrossReference_12_1_0() { return cModelEObjectCrossReference_12_1_0; }
		
		//ID
		public RuleCall getModelEObjectIDTerminalRuleCall_12_1_0_1() { return cModelEObjectIDTerminalRuleCall_12_1_0_1; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_13() { return cRightCurlyBracketKeyword_13; }
	}
	
	
	private final ResourceElements pResource;
	private final ContainerResourceElements pContainerResource;
	private final ProjectElements pProject;
	private final FolderElements pFolder;
	private final FileElements pFile;
	private final TerminalRule tBOOL;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public DataGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pResource = new ResourceElements();
		this.pContainerResource = new ContainerResourceElements();
		this.pProject = new ProjectElements();
		this.pFolder = new FolderElements();
		this.pFile = new FileElements();
		this.tBOOL = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "codeskills.designer.data.Data.BOOL");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("codeskills.designer.data.Data".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Resource:
	//	ContainerResource | File;
	public ResourceElements getResourceAccess() {
		return pResource;
	}
	
	public ParserRule getResourceRule() {
		return getResourceAccess().getRule();
	}
	
	//ContainerResource:
	//	Project | Folder;
	public ContainerResourceElements getContainerResourceAccess() {
		return pContainerResource;
	}
	
	public ParserRule getContainerResourceRule() {
		return getContainerResourceAccess().getRule();
	}
	
	//Project:
	//	'project'
	//	'{'
	//	'name' ':' name=STRING (',' 'files' ':' '[' files+=File* ']')? (',' 'folders' ':' '[' folders+=Folder* ']')?
	//	'}';
	public ProjectElements getProjectAccess() {
		return pProject;
	}
	
	public ParserRule getProjectRule() {
		return getProjectAccess().getRule();
	}
	
	//Folder:
	//	'{' 'name' ':' name=STRING (',' 'folders' ':' '[' folders+=Folder* ']')? (',' 'files' ':' '[' files+=File* ']')?
	//	'}';
	public FolderElements getFolderAccess() {
		return pFolder;
	}
	
	public ParserRule getFolderRule() {
		return getFolderAccess().getRule();
	}
	
	//File:
	//	'{' 'name' ':' name=STRING ',' 'ext' ':' ext=STRING ',' 'changed' ':' changed?=BOOL? (',' model+=[ecore::EObject]*)?
	//	'}';
	public FileElements getFileAccess() {
		return pFile;
	}
	
	public ParserRule getFileRule() {
		return getFileAccess().getRule();
	}
	
	//terminal BOOL returns ecore::EBoolean:
	//	'true' | 'false';
	public TerminalRule getBOOLRule() {
		return tBOOL;
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
